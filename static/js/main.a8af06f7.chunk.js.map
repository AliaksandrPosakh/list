{"version":3,"sources":["components/todo-item.js","components/todo-list.js","constans/constans.js","apiWrapper.js","actions/actions.js","components/todoAddForm.js","components/editTodoForm.js","App.js","reducers/todoListReducer.js","reducers/loginReducer.js","reducers/reducers.js","store.js","index.js"],"names":["Item","props","react_default","a","createElement","className","type","item","text","onClick","editTodoText","removeTodo","List","children","ADD_TODO","REMOVE_TODO","EDIT_TODO","OPEN_EDIT_FORM","CLOSE_EDIT_FORM","LOGIN","GET_DATA","TODO_STORAGE_NAME","readTodoFromLocalStorage","todoListString","localStorage","getItem","JSON","parse","saveTodoListToLocalStorage","todoList","setItem","stringify","apiWrapper","saveTodo","todoItem","Promise","resolve","setTimeout","push","getTodoList","editTodoById","id","map","el","Object","objectSpread","removeTodoById","filter","ToAddForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","addNewTodo","event","setState","target","value","addTodo","onChange","placeholder","Component","connect","todos","listOfTodo","dispatch","uuid","createTodo","api","then","constans","payload","EditTodo","onSaveButtonClick","_this$props","editTodo","closeEditForm","task","editText","editForm","isOpen","App","getData","openEditForm","find","editedTaskId","editTodoForm","length","todo_list","todo_item","key","console","log","todoAddForm","renderTaskBlock","todoListReducer","usersList","newTodoList","initialState","combineReducers","loginReducer","arguments","undefined","action","concat","toConsumableArray","editList","todo","list","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a8af06f7.chunk.js","sourcesContent":["import React from 'react';\r\nconst Item = (props) => (\r\n        <div className = 'item'>\r\n            <input type=\"checkbox\" />\r\n            <span>{props.item.text}</span>\r\n            <button onClick={props.editTodoText}>edit</button>\r\n            <button className = 'close' onClick={props.removeTodo}>x</button><br/>  \r\n        </div>\r\n)\r\n\r\nexport default Item;","import React  from 'react';\r\nconst List = (props) => (\r\n    <div className = 'list'>{props.children}</div>  \r\n);\r\n\r\nexport default List;\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const OPEN_EDIT_FORM = 'OPEN_EDIT_FORM';\r\nexport const CLOSE_EDIT_FORM = 'CLOSE_EDIT_FORM';\r\nexport const LOGIN = 'LOGIN';\r\nexport const GET_DATA = 'GET_DATA';","const TODO_STORAGE_NAME = 'todo';\r\n\r\nfunction readTodoFromLocalStorage() {\r\n  const todoListString = localStorage.getItem(TODO_STORAGE_NAME);\r\n  return (todoListString == null || todoListString === '') ? [] : JSON.parse(todoListString);\r\n}\r\n\r\nfunction saveTodoListToLocalStorage(todoList) {\r\n  localStorage.setItem(TODO_STORAGE_NAME, JSON.stringify(todoList));\r\n}\r\n\r\nfunction saveTodo(todoItem) {\r\n    return new Promise(resolve => {\r\n      setTimeout(function() {\r\n        let todoList = readTodoFromLocalStorage();\r\n        todoList.push(todoItem);\r\n        saveTodoListToLocalStorage(todoList);\r\n        resolve();\r\n      }, 100)\r\n    });\r\n  }\r\n\r\nfunction getTodoList() {\r\n  return new Promise(resolve => {\r\n    setTimeout(function() {\r\n      resolve(readTodoFromLocalStorage());\r\n    }, 100);\r\n  });\r\n}\r\n\r\nfunction editTodoById(id, text) {\r\n  return new Promise (resolve => {\r\n    setTimeout(function() {\r\n      const todoList = readTodoFromLocalStorage();\r\n      const editingList = todoList.map(\r\n        el => el.id === id\r\n          ? {...el, text: text} \r\n          : el \r\n        );\r\n      saveTodoListToLocalStorage(editingList);\r\n      resolve();\r\n    }, 100)\r\n  })\r\n  \r\n}\r\n\r\nfunction removeTodoById(id) {\r\n  return new Promise(resolve => {\r\n    setTimeout(function() {\r\n      let todoList = readTodoFromLocalStorage();\r\n      const newTodoList = todoList.filter(el => el.id !== id);\r\n      saveTodoListToLocalStorage(newTodoList);\r\n      resolve();\r\n    }, 100)\r\n  });\r\n}\r\n\r\nexport default {\r\n  saveTodo,\r\n  getTodoList,\r\n  editTodoById,\r\n  removeTodoById\r\n}\r\n","import *as constans from '../constans/constans';\r\nimport api from '../apiWrapper';\r\nimport uuid from 'uuid/v1';\r\n\r\nfunction createTodo(text) {\r\n    return {\r\n        text,\r\n        id: uuid(),\r\n    }\r\n}\r\n\r\nexport function addTodo (text) {\r\n    return function (dispatch) {\r\n        const todoItem = createTodo(text);\r\n        api.saveTodo(todoItem)\r\n            .then(() => {\r\n                dispatch({\r\n                    type: constans.ADD_TODO,\r\n                    payload: {todoItem}\r\n                });\r\n            });\r\n    }  \r\n}\r\n\r\nexport function removeTodo (id) {\r\n    return function (dispatch) {\r\n        api.removeTodoById(id)\r\n            .then(() => {\r\n                dispatch({\r\n                    type: constans.REMOVE_TODO,\r\n                    payload: id\r\n                })\r\n            })\r\n    }  \r\n};\r\n\r\nexport function editTodo (id, text) {\r\n    return function (dispatch) {\r\n        api.editTodoById(id,text)\r\n            .then(() => {\r\n                dispatch({\r\n                    type: constans.EDIT_TODO,\r\n                    payload: {\r\n                        id,\r\n                        text\r\n                    }\r\n                })\r\n        })\r\n    }\r\n    \r\n}\r\n\r\nexport function getData () {\r\n\r\n    return function (dispatch) {\r\n        api.getTodoList()\r\n            .then(newTodoList => {\r\n                console.log(newTodoList);\r\n                dispatch({\r\n                    type: constans.GET_DATA,\r\n                    newTodoList\r\n                })\r\n        })\r\n    }\r\n\r\n    // const newTodoList = api.getTodoList();\r\n    // return {\r\n    //     type: constans.GET_DATA,\r\n    //     newTodoList\r\n    // }\r\n    \r\n}\r\n\r\nexport const openEditForm = id => ({\r\n    type: constans.OPEN_EDIT_FORM,\r\n    payload: id\r\n});\r\n\r\nexport const closeEditForm = () => ({\r\n    type: constans.CLOSE_EDIT_FORM,\r\n});\r\n\r\nexport const login = text => ({\r\n    type: constans.LOGIN,\r\n    payload: text\r\n})","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport *as actions from '../actions/actions';\r\n\r\nclass ToAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: '',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addNewTodo = this.addNewTodo.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({text: event.target.value});\r\n    }\r\n\r\n    addNewTodo() {\r\n        const {addTodo} = this.props;\r\n        addTodo(this.state.text);\r\n        this.setState({text: ''});\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <header>\r\n                <input type='text' onChange={this.handleChange} value={this.state.text} placeholder='Add...' />\r\n                <button onClick={this.addNewTodo} >Add</button>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n    \r\nconst mapStateToProps = state => ({\r\n    todos: state.listOfTodo,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{\r\n    addTodo: actions.addTodo,\r\n})(ToAddForm);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport *as actions from '../actions/actions';\r\nclass EditTodo extends Component {\r\n    constructor(props) {\r\n        super(props);        \r\n        this.state = {\r\n            editText: props.task.text\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({editText: event.target.value});\r\n    }\r\n\r\n    onSaveButtonClick = () => {\r\n        const{editTodo, closeEditForm} = this.props;\r\n        editTodo(this.props.task.id, this.state.editText);\r\n        closeEditForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <p className = 'editForm'>\r\n                <input onChange={this.handleChange} value={this.state.editText} />\r\n                <button onClick={this.onSaveButtonClick}>save</button>\r\n            </p>\r\n        )\r\n        \r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: state.listOfTodo,\r\n    editForm: state.isOpen,\r\n  });\r\n  \r\n  export default connect(mapStateToProps, {\r\n    closeEditForm: actions.closeEditForm,\r\n    editTodo: actions.editTodo,\r\n  })(EditTodo);\r\n","import React, {Component} from 'react';\nimport Item from './components/todo-item';\nimport List from './components/todo-list';\nimport ToAddForm from './components/todoAddForm';\nimport EditTodo from './components/editTodoForm';\nimport {connect} from 'react-redux';\nimport *as actions from './actions/actions';\nimport { log } from 'util';\n\nclass App extends Component {\n  componentDidMount() {\n    const {getData} = this.props;\n    getData();\n  }\n  renderTaskBlock() {\n    const {removeTodo, openEditForm} = this.props;\n    if(this.props.editForm) { \n        const task = this.props.todos.find(el => el.id === this.props.editedTaskId);\n        return task ? <EditTodo task={task}></EditTodo> : null\n    }\n    else\n    return this.props.todos.length > 0 ?\n        <List>\n          {\n            this.props.todos.map(item => {\n                return <Item\n                  editTodoText={openEditForm.bind(this, item.id)}\n                  key={item.id}\n                  item={item}\n                  removeTodo={removeTodo.bind(this, item.id)}\n                  >\n                  </Item>\n            })\n                \n          }\n        </List>\n       : null\n      \n    }\n    \n  render() {\n    console.log('render app', this.props);  \n    return (\n      <div>\n          <ToAddForm\n          ></ToAddForm>\n          {this.renderTaskBlock()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todoListReducer.listOfTodo,\n  editForm: state.todoListReducer.isOpen,\n  editedTaskId: state.todoListReducer.editedTaskId,\n  usersList: state.usersList,\n});\n\nexport default connect(mapStateToProps, {\n  removeTodo: actions.removeTodo,\n  openEditForm: actions.openEditForm,\n  getData: actions.getData\n})(App);","import *as constans from '../constans/constans';\r\n\r\nconst initialState = {\r\n    listOfTodo: [],\r\n    isOpen: false,\r\n    editedTaskId: null\r\n};\r\n\r\nexport default function todoListReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        case constans.REMOVE_TODO:\r\n            const todoList = state.listOfTodo.filter(el => el.id !== action.payload);\r\n            return {...state, listOfTodo: todoList};\r\n            \r\n        case constans.EDIT_TODO:\r\n            const editList = state.listOfTodo.map(\r\n                todo => todo.id === action.payload.id\r\n                ? {...todo, text: action.payload.text}\r\n                : todo\r\n            );\r\n            return {...state, listOfTodo: editList};\r\n            \r\n        case constans.ADD_TODO:\r\n            const listOfTodo = [...state.listOfTodo, action.payload.todoItem];\r\n            return {...state, listOfTodo}\r\n\r\n        case constans.OPEN_EDIT_FORM:\r\n            const openEdit = {...state, isOpen: true, editedTaskId: action.payload};\r\n            return openEdit;\r\n        \r\n        case constans.CLOSE_EDIT_FORM:\r\n            const closeEdit = {...state, isOpen: false, editedTaskId: null};\r\n            return closeEdit;\r\n\r\n            case constans.GET_DATA:\r\n                const list = action.newTodoList;\r\n                return {...state, listOfTodo: list};\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\n","import *as constans from '../constans/constans';\r\nconst initialState = [];\r\nexport default function todoListReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        case constans.LOGIN:\r\n            return [...state, action.payload];\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import todoListReducer from './todoListReducer';\r\nimport loginReducer from './loginReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nexport default  combineReducers({\r\n    loginReducer,\r\n    todoListReducer\r\n});\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers/reducers';\r\n// const store = createStore(reducers, [window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk)]);\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n  // other store enhancers if any\r\n);\r\nconst store = createStore(reducers, enhancer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport  './index.css';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}